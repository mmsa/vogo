version: '3.8'

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-vogo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vogo}
      POSTGRES_DB: ${POSTGRES_DB:-vogo}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-vogo}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vogo-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-vogo}:${POSTGRES_PASSWORD:-vogo}@db:5432/${POSTGRES_DB:-vogo}
      
      # Auth
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      
      # OpenAI
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      
      # CORS
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost,http://18.170.49.10}
    volumes:
      - ./backend/alembic:/app/alembic
    networks:
      - vogo-network
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:8000/healthz')\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - vogo-network
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  vogo-network:
    driver: bridge

